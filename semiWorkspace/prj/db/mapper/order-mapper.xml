<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderMapper">
	<select id="getOrderFormDetails"
		resultType="OrderFormDetailsDto">
		SELECT
		PI.FILENAME THUMBNAIL_FILENAME
		, S.NAME SELLER_NAME
		, P.PRODUCT_NO
		, P.NAME PRODUCT_NAME
		, S.NAME SIZE_NAME
		, C.NAME COLOR_NAME
		, C.QUANTITY ORDER_QUANTITY
		, P.PRICE PRODUCT_PRICE
		, ROUND(C.QUANTITY * P.PRICE) ORDER_PRICE
		, I.QUANTITY INVENTORY_QUANTITY
		, I.INVENTORY_NO INVENTORY_NO
		FROM CART C
		JOIN INVENTORY I ON
		C.INVENTORY_NO = I.INVENTORY_NO
		JOIN PRODUCT P ON I.PRODUCT_NO =
		P.PRODUCT_NO
		JOIN SELLER S ON P.SELLER_NO = S.SELLER_NO
		JOIN PRODUCT_IMG
		PI ON P.PRODUCT_NO = PI.PRODUCT_NO AND PI.THUMBNAIL_YN = 'Y'
		LEFT JOIN
		PRODUCT_SIZE PS ON I.SIZE_NO = PS.SIZE_NO
		LEFT JOIN COLOR C ON
		I.COLOR_NO = C.COLOR_NO
		<foreach collection="array" item="no"
			open="WHERE CART_NO IN (" separator="," close=")">
			${no}
		</foreach>
		ORDER BY C.CREATED_DATE DESC
	</select>

	<select id="getMemberAddress" resultType="AddressVo">
		SELECT
		ADDRESS_NO
		, MEMBER_NO
		, POSTCODE
		, ADDRESS
		, DETAILED_ADDRESS
		, EXTRA_ADDRESS
		, DEFAULT_YN DEFAULT_ADDRESS_YN
		, DEFAULT_REQ DEFAULT_SHIPPING_REQ
		, DELETED_YN
		FROM ADDRESS
		WHERE MEMBER_NO = ${memberNo}
		AND DELETED_YN =
		'N'
		ORDER BY DEFAULT_YN DESC
	</select>

	<insert id="insertIntoOrders">
		INSERT INTO ORDERS
			(ORDERS_NO
			, MEMBER_NO
			, ADDRESS_NO
			, STATUS_NO
			, TOTAL_PRICE
			, SHIPPING_REQ
			, SHIPPING_FEE)
		VALUES
			(SEQ_ORDERS.NEXTVAL,
			${memberNo},
			${addressNo},
			2,
			${paidAmount},
			#{shippingReq},
			0)
	</insert>
	
	<select id="getGeneratedOrdersNo" resultType="String">
		SELECT SEQ_ORDERS.CURRVAL
		FROM DUAL
	</select>
	
	
	<select id="getOrderDetailListByStatus" resultType="OrderDetailsDto">
		SELECT
		    O.ORDERS_NO
		    , OD.ORDER_DETAIL_NO
		    , SL.SELLER_NO
		    , SL.NAME SELLER_NAME
		    , P.PRODUCT_NO
		    , P.NAME PRODUCT_NAME
		    , TRIM(TO_CHAR(P.PRICE, '999,999,999')) PRODUCT_PRICE
		    , TRIM(TO_CHAR(ROUND(P.PRICE * OD.QUANTITY), '999,999,999')) ORDER_DETAIL_PRICE
		    , OD.QUANTITY ORDER_DETAIL_QUANTITY
		    , S.NAME ORDER_STATUS_NAME
		    , S.STATUS_NO ORDER_STATUS_NO
		    , ODS.NAME ORDER_DETAIL_STATUS_NAME
		    , ODS.STATUS_NO ORDER_DETAIL_STATUS_NO
		    , I.INVENTORY_NO 
		    , PS.NAME SIZE_NAME
		    , C.NAME COLOR_NAME
		    , PI.FILENAME THUMBNAIL_FILENAME
		    , TO_CHAR(O.CREATED_DATE, 'YYYY.mm.dd') ORDER_DATE
		FROM ORDERS O
		JOIN STATUS S ON O.STATUS_NO = S.STATUS_NO
		JOIN ORDER_DETAIL OD ON O.ORDERS_NO = OD.ORDERS_NO
		JOIN INVENTORY I ON OD.INVENTORY_NO = I.INVENTORY_NO
		JOIN PRODUCT_SIZE PS ON I.SIZE_NO = PS.SIZE_NO
		JOIN COLOR C ON I.COLOR_NO = C.COLOR_NO
		JOIN STATUS ODS ON OD.STATUS_NO = ODS.STATUS_NO
		JOIN PRODUCT P ON OD.PRODUCT_NO = P.PRODUCT_NO
		JOIN PRODUCT_IMG PI ON P.PRODUCT_NO = PI.PRODUCT_NO AND PI.THUMBNAIL_YN = 'Y'
		JOIN SELLER SL ON P.SELLER_NO = SL.SELLER_NO
		WHERE O.MEMBER_NO = #{memberNo} AND OD.STATUS_NO = #{statusNo}
		ORDER BY O.CREATED_DATE DESC, OD.ORDER_DETAIL_NO DESC
	</select>
	
	<select id="getStatusCount" resultType="OrderStatusCountDto">
		SELECT S.STATUS_NO, S.NAME STATUS_NAME, COALESCE(COUNT(OD.STATUS_NO), 0) AS COUNT
		FROM STATUS S
		LEFT JOIN (
		    SELECT OD.STATUS_NO
		    FROM ORDER_DETAIL OD
		    JOIN ORDERS O ON OD.ORDERS_NO = O.ORDERS_NO
		    WHERE O.MEMBER_NO = #{memberNo}
		) OD ON S.STATUS_NO = OD.STATUS_NO
		WHERE S.STATUS_NO IN (1, 3, 4, 5, 6)
		GROUP BY S.NAME, S.STATUS_NO
		ORDER BY S.STATUS_NO
	</select>

</mapper>
